JSON
 4. Создать внешний репозиторий c названием JSON.
    Create new repositiry on https://github.com/Aliaksandr11

 5. Клонировать репозиторий JSON на локальный компьютер.
    git clone https://github.com/Aliaksandr11/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
    touch new.json

 7. Добавить файл под гит.
    git add new.json

 8. Закоммитить файл.
    git commit -m "add names"

 9. Отправить файл на внешний GitHub репозиторий.
    git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
     cat >> new.json
     {
        "Name": "Aliaksandr",
        "Last name": "Tsviatkou",
        "Age": 35,
        "Pets number": 4,
        "Salary": "1000$"
     }
 11. Отправить изменения на внешний репозиторий.
     git push -f

 12. Создать файл preferences.json
     touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
cat >> preferences.json
{
   "Favorite movie": "Residen evil",
   "Favorite series": "Supernatural",
   "Favorite food": "Sweets",
   "Favorite season": "Summer",
   "Country to visit": "Russia"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
   cat > skills.json
{
   "skill": "Basic theory (What is testing, bug reports, documentation, types, methods, testing areas, etc.) SDLC, STLC.",
   "skill": "2. What is a client-server architecture",
   "skill": "3. HTTP Request methods to the server",
   "skill": "4. HTTP server response codes",
   "skill": "5. Structures of HTTP requests and responses",
   "skill": "API testing via Postman (JS, API autotests)",
   "skill": "Mobile testing",
   "skill": "SQL fundamentals (Create, Delete, Drop, Insert Into, Select, From, Where, Join)",
   "skill": "Scrum development methodology",
   "skill": "Postgres database (installation, configuration and use)",
   "skill": "Python. (Learning the basics. Creating a client-server application)",
   "skill": "Access to remote servers",
   "skill": "Access to remote servers"
}

 15. Отправить сразу 2 файла на внешний репозиторий.
     git add preferences.json skills.json
     git commit -m "add names"
     git push
     
 16. На веб интерфейсе создать файл bug_report.json.
     add file --> create new file
     
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     Commit changes

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
     choose файл bug_report.json -->> click edit
     {
        "ID": "A1",
        "Title": "Нажатие кнопки 'Оплатить' на главной странице не перенаправляет на страницу оплаты",
        "Project": "Книжный интернет магазин 'Book4u.com'",
        "STR": [
                "1. Зайти на главную страницу сайта (ссылка_на_сайт)",
                "2. Нажать кнопку Оплатить"
        ],
        "Enviroment":
        {
                "OS": "Windows 11 x64 build 21H2",
                "Browser": "Google Chrome v96.0.4664.45 x64"
        },
        "Component": "Кнопка Оплатить",
        "Build": "0.5.7",
        "Actual result": "Нажатие кнопки Оплатить НЕ перенаправляет на страницу Оплаты",
        "Expected result": "Нажатие кнопки Оплатить перенаправляет на страницу Оплаты",
        "Severity": "Critical",
        "Priority": "High",
        "Status": "Open",
        "Author": "Цветков Александр",
        "Sign to": "Лещенко Владимир",
        "Attachments": "ссылка_на_картинку_или_видео_с_багом"
     }

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     click Commit new file

 20. Синхронизировать внешний и локальный репозиторий JSON
     git pull


XML
 21. Создать внешний репозиторий c названием XML.
     Create new repositiry on https://github.com/Aliaksandr11
     
 22. Клонировать репозиторий XML на локальный компьютер.
     git clone https://github.com/Aliaksandr11/XML.git

 23. Внутри локального XML создать файл “new.xml”.
     touch new.xml
     
 24. Добавить файл под гит.
     git add new.xml

 25. Закоммитить файл.
     git commit -m "commit"

 26. Отправить файл на внешний GitHub репозиторий.
     git push
 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
     nano new.xml
     <Name>Aleksandr</Name>
     <Last_name>Tsvetkov</Last_name>
     <Age>35</Age>
     <Pets_number>4</Pets_number>
     <Salary>1000</Salary>

 28. Отправить изменения на внешний репозиторий.
     git add new.xml
     git commit -m "change"
     git push

 29. Создать файл preferences.xml
     touch preferences.xml
    
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
    cat > preferences.xml
    <Favorite_movie>Resident Evil</Favorite_movie>
    <Favorite_serie>Supernatural</Favorite_serie>
    <Favorite_food>Sweets</Favorite_food>
    <Favorite_season>Summer</Favorite_season>
    <Country_visit>Russia</country_visit>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
     cat > skills.txt
   <Skills>
     <Base_theory> 1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.</Base_theory>
     <Client-Server>2. Что такое клиент-серверная архитектура.</Client-Server>
     <HTTP_methods>3. HTTP Методы запросов на сервер.</HTTP_methods>
     <Codes>4. Коды ответов HTTP сервера.</Codes>
     <Structures>5. Структуры HTTP запросов и ответов.</Structures>
     <JSON>6. Что такое JSON, XML. Их структура.</JSON>
     <Other_skills>и другие навыки</Other_skills>
  </Skills>
  

 32. Сделать коммит в одну строку.
     git add -A && git commit -m "commit1"

 33. Отправить сразу 2 файла на внешний репозиторий.
     git push

 34. На веб интерфейсе создать файл bug_report.xml.
     add file --> create new file

 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     click Commit changes

 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
     choose файл bug_report.xml -->> click edit
     
     

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     click Commit changes

 38. Синхронизировать внешний и локальный репозиторий XML
     git pull

36_channel, [11.08.2023 11:06]
TXT
 1. Создать внешний репозиторий c названием TXT.
    Create new repositiry on https://github.com/Aliaksandr11

 2. Клонировать репозиторий TXT на локальный компьютер. 
    git clone https://github.com/Aliaksandr11/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
    touch new.txt

 4. Добавить файл под гит.
    git add new.txt

 5. Закоммитить файл.
    git commit -m "commit"
    
 6. Отправить файл на внешний GitHub репозиторий.
    git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
    nano new.txt
    Name: Tsvetkov Aleksandr
    Age: 35
    Pets number: 4
    Salary: 1000$

 8. Отправить изменения на внешний репозиторий.
    git add new.txt
    git commit -m "commit"
    git push

 9. Создать файл preferences.txt
    touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
     Favorite movie: Resident evil
     Favorite serie: Supernatural
     Favorite food: Sweets
     Country visit: Russia

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
     cat >> skills.txt
     1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
     2. Что такое клиент-серверная архитектура.
     3. HTTP Методы запросов на сервер.
     4. Коды ответов HTTP сервера.
     5. Структуры HTTP запросов и ответов.
     6. Что такое JSON, XML. Их структура.
     7. Тестирование API через Postman (JS, автотесты API).
    
 12. Сделать коммит в одну строку.
     git add -A && git commit -m "comment"

 13. Отправить сразу 2 файла на внешний репозиторий.
     git push

 14. На веб интерфейсе создать файл bug_report.txt.
     add file --> create new file
    
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     click "Commit new file"

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
     click bug_report --> edit file
        <ID>:A1</ID>
        <Title>:Нажатие кнопки 'Оплатить' на главной странице не перенаправляет на страницу оплаты</Title>
        <Project>: Книжный интернет магазин 'Book4u.com'</Project>
        <STR>:
               <one>1.Зайти на главную страницу сайта (ссылка_на_сайт)</one>
               <two>2.Нажать кнопку Оплатить</two>
        </STR>
        <Enviroment>: 
                     <OS>: Windows 11 x64 build 21H2</OS>
                     <Browser>: Google Chrome v96.0.4664.45 x64</Browser>
                     <Component>: Кнопка Оплатить</Component>
        </Enviroment>
        <Build>:0.5.7</Build>
        <Actual result>: Нажатие кнопки Оплатить НЕ перенаправляет на страницу Оплаты</Actual result>
        <Expected result>: Нажатие кнопки Оплатить перенаправляет на страницу Оплаты</Expected result>
        <Severity>: Critical</Severity>
        <Priority>: High</Priority>
        <Status>: Open</Status>
        <Author>: Цветков Александр</Author>
        <Sign to>: Лещенко Владимир</Sign to>
        <Attachments>: ссылка_на_картинку_или_видео_с_багом</Attachments>
      
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
     click commit new file

 18. Синхронизировать внешний и локальный репозиторий TXT
     git pull
